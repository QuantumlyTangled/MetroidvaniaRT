// Hint files help the Visual Studio IDE interpret Visual C++ identifiers
// such as names of functions and macros.
// For more information see https://go.microsoft.com/fwlink/?linkid=865984
#define NOVELRT_PARAMETERLESS_EVENT(eventName) public: void subscribeTo##eventName(std::function<void()> delegate) { _##eventName##EventDelegates.push_back(delegate); } void unsubscribeFrom##eventName(std::function<void()> delegate) { _##eventName##EventDelegates.erase(std::remove_if(_##eventName##EventDelegates.begin(), _##eventName##EventDelegates.end(), [delegate](const std::function<void()> x) { auto result = x.target<void()>() == delegate.target<void()>(); return result; }), _##eventName##EventDelegates.end()); } protected: void raise##eventName() { erase##eventName##NullSubscribers(); for (auto& delegate : _##eventName##EventDelegates) { delegate(); } } private: std::vector<std::function<void()>> _##eventName##EventDelegates; void erase##eventName##NullSubscribers() { _##eventName##EventDelegates.erase(std::remove_if(_##eventName##EventDelegates.begin(), _##eventName##EventDelegates.end(), [](std::function<void()> x) { auto result = x == nullptr; return result; }), _##eventName##EventDelegates.end()); }
